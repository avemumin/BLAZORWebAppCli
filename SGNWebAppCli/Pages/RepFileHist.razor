@page "/repfilehist"
@using SGNWebAppCli.Shared
@using SGNWebAppCli.Helpers
@using SGNWebAppCli.Data
@inject IReportSerivce<FileHistory> reportService
@implements IDisposable
@inject IJSRuntime JS
@attribute [Authorize(Policy = "ActiveUser", Roles = "Owner,Administrator")]

<AuthorizeView Roles="Owner" Policy="ActiveUser">
    <Authorized>
        <h4>Historia plików - zestawienie zawierające pliki z niepowodzeniem </h4>
        @*@if (rfhList == null)
            {
                <LoadingData DisplayMessage="false"></LoadingData>
            }
            else if (rfhList.Count == 0)
            {
                <text> Brak danych do wyświetlenia </text>
            }
            else
            { }*@
        @if (rfhList != null)
        {
            <GridView Items="rfhList">
                <GridColumns>
                    <GridColumn ColumnTitle="ID"></GridColumn>
                    <GridColumn ColumnTitle="Nazwa pliku"></GridColumn>
                    <GridColumn ColumnTitle="Powodzenie"></GridColumn>
                    <GridColumn ColumnTitle="Opis błędu"></GridColumn>
                    <GridColumn ColumnTitle="Data"></GridColumn>
                    <GridColumn ColumnTitle="Id zliczenia"></GridColumn>
                </GridColumns>
                <GridRow Context="rfh">
                    <td><b>@rfh.IdFileHistory</b> </td>
                    <td><b>@rfh.FileName</b> </td>
                    <td><b>@rfh.IsProceededSuccess</b> </td>
                    <td><b>@rfh.ErrorDescription</b> </td>
                    <td><b>@rfh.ProcessDate</b> </td>
                    <td><b>@rfh.IdCountResult</b> </td>
                </GridRow>
            </GridView>

            <ExportDataButton ExportedCollectionName="rfhList"
                              ExecutionTitleHeader="Export do pliku"
                              @ref="refToExport"
                              DefaultFileName="@ReportName"
                              ButtonVisibility="IsVisible">

            </ExportDataButton>

        }
    </Authorized>
    <NotAuthorized>
        <AccessDeniedInfo></AccessDeniedInfo>
    </NotAuthorized>
</AuthorizeView>
@code {
    private string ReportName = "Historia importu plików";
    public FileHistory rfh { get; set; }
    public List<FileHistory> rfhList { get; set; }
    ExportDataButton<FileHistory> refToExport;

    protected override void OnInitialized()
    {
        rfh = new FileHistory();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await LoadData();
        await base.OnAfterRenderAsync(firstRender);
    }

    private bool IsVisible
    {
        get
        {
            if (!SGNWebAppCli.Helpers.ExtensionMethods.IsCollectionEmptyOrNull(rfhList))
                return false;
            else
                return true;
        }
    }

    public string FileName
    {
        get
        {
            return ReportName + " " + DateTime.Now;
        }
    }

    private async Task LoadData()
    {
        rfhList = await reportService.GetAllAsync("ReportFilesHistory/");
        StateHasChanged();
    }
    public void Dispose()
    {
        Console.WriteLine("Heport File History - Dispose");
    }
}
