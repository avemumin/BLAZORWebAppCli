@page "/userlist"
@using Blazored.LocalStorage
@inject IReportSerivce<User> reportSerivce
@inject ILocalStorageService localStorageService
@inject IUserService userSerivce
@inject IJSRuntime JSRuntime
@implements IDisposable


<AuthorizeView Roles="Owner,Administrator">
    <Authorized Context="some">
        <div class="col-12">
            <h3><b>Lista użytkowników</b></h3>
            <hr />

            <ServerValidation IsVisible="IsVisible"
                              Results="Result">
                @RecordInformation
            </ServerValidation>

            <EditForm Model="@user" OnValidSubmit="@SaveUser">

                <div class="col-12 row">
                    <label class="col-2 font-weight-bold">imię :</label>
                    <input type="text" readonly class="form-control col-3" @bind="user.UserName" placeholder="imię" />
                </div>
                <br />
                <div class="col-12 row">
                    <label class="col-2 font-weight-bold">nazwisko :</label>
                    <input type="text" readonly class="form-control col-3" @bind="user.UserLastName" placeholder="nazwisko" />
                </div>
                <br />
                <div class="col-12 row">
                    <label class="col-2 font-weight-bold">email  :</label>
                    <input type="text" readonly class="form-control col-3" @bind="user.UserEmailAddress" placeholder="email" />
                </div>
                <br />
                <AuthorizeView Roles="Owner,Administrator">
                    <Authorized Context="context1">
                        <div class="col-12 row">
                            <label class="col-2 font-weight-bold">Konto aktywne :</label>
                            <InputCheckbox @bind-Value="user.IsActive" />
                        </div>
                        <br />
                        <div class="col-12 row">
                            <span class="col-2"></span>
                            <input type="submit" class="form-control col-1 btn btn-primary" value="Zapisz" />
                            <span>&nbsp;</span>
                        </div>

                    </Authorized>
                </AuthorizeView>
            </EditForm>

        </div>
        <br />

        <div class="col-10">

            <h3><b>Użytkownicy</b></h3>

            @if (UsersList != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Imię</th>
                            <th>Nazwisko</th>
                            <th>Email</th>
                            <th>Konto aktywne</th>
                            <AuthorizeView Roles="Owner,Administrator">
                                <Authorized>
                                    <th>Dostępne akcje</th>
                                </Authorized>
                            </AuthorizeView>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in UsersList)
                        {
                            string aktywny = @user.IsActive ? "Tak" : "Nie";
                            if (!user.IsActive)
                            {
                                <tr style="background-color:burlywood; font-weight:bold">
                                    <td>@user.IdUser</td>
                                    <td>@user.UserName</td>
                                    <td>@user.UserLastName</td>
                                    <td>
                                        <AuthorizeView Roles="Owner,Administrator">
                                            <Authorized>
                                                <NavLink href="@string.Format("/userlist/userdetail/{0}", @user.IdUser)">
                                                    @user.UserEmailAddress
                                                </NavLink>
                                            </Authorized>
                                        </AuthorizeView>
                                        <AuthorizeView Roles="NewUser,Pracownik">
                                            <Authorized>
                                                <a>@user.UserEmailAddress</a>
                                            </Authorized>
                                        </AuthorizeView>

                                    </td>
                                    <td>@aktywny</td>

                                    <th>
                                        <AuthorizeView Roles="Owner,Administrator">
                                            <Authorized>
                                                <a style="text-underline-position:below; cursor:pointer; color:blue; font-weight:bold"
                                                   @onclick="(() => EditUser(user))">
                                                    Edycja
                                                </a>
                                            </Authorized>
                                        </AuthorizeView>

                                        <AuthorizeView Roles="Owner">
                                            <Authorized>
                                                <a>|</a>
                                                @if (ShowDeleteQuestion)
                                                {
                                                    <div class="popconfirm">
                                                        @Message
                                                        <br />
                                                        <button type="button" class="btn btn-warning" @onclick="() => Confirmation(false,UserToDelete)">NIE</button>
                                                        <button type="button" class="btn btn-primary" @onclick="() => Confirmation(true,UserToDelete)">TAK</button>
                                                    </div>
                                                }
                                                <a style="text-underline-position:below; cursor:pointer; color:blue; font-weight:bold"
                                                   @onclick="(()=>DeleteAsk(user.IdUser))">
                                                    Usuń
                                                </a>
                                            </Authorized>
                                        </AuthorizeView>
                                    </th>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>@user.IdUser</td>
                                    <td>@user.UserName</td>
                                    <td>@user.UserLastName</td>
                                    <td>
                                        <AuthorizeView Roles="Owner,Administrator">
                                            <Authorized>
                                                <NavLink href="@string.Format("/userlist/userdetail/{0}",@user.IdUser)">
                                                    @user.UserEmailAddress
                                                </NavLink>
                                            </Authorized>
                                        </AuthorizeView>
                                        <AuthorizeView Roles="NewUser,Pracownik">
                                            <Authorized>
                                                <a>@user.UserEmailAddress</a>
                                            </Authorized>
                                        </AuthorizeView>

                                    </td>
                                    <td>@aktywny</td>

                                    <th>
                                        <AuthorizeView Roles="Owner,Administrator">
                                            <Authorized>
                                                <a style="text-underline-position:below; cursor:pointer; color:blue; font-weight:bold"
                                                   @onclick="(()=>EditUser(user))">
                                                    Edycja
                                                </a>
                                            </Authorized>
                                        </AuthorizeView>

                                        <AuthorizeView Roles="Owner">
                                            <Authorized>
                                                <a>|</a>
                                                @if (ShowDeleteQuestion)
                                                {
                                                    <div class="popconfirm">
                                                        @Message
                                                        <br />
                                                        <button type="button" class="btn btn-warning" @onclick="() => Confirmation(false,UserToDelete)">NIE</button>
                                                        <button type="button" class="btn btn-primary" @onclick="() => Confirmation(true,UserToDelete)">TAK</button>
                                                    </div>
                                                }
                                                <a style="text-underline-position:below; cursor:pointer; color:blue; font-weight:bold"
                                                   @onclick="(()=>DeleteAsk(user.IdUser))">
                                                    Usuń
                                                </a>
                                            </Authorized>
                                        </AuthorizeView>
                                    </th>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            }
        </div>

    </Authorized>
</AuthorizeView>

@code {


    public User user { get; set; }
    public List<User> UsersList { get; set; }
    //  ElementReference firstNameTextBox;

    public bool IsGridViewFiltered { get; set; }

    public string RecordInformation { get; set; }

    ///Maintenance ServerValidation template
    public bool IsVisible { get; set; }
    public bool Result { get; set; }


    public bool ShowDeleteQuestion { get; set; }
    public string Message { set; get; }

    public int UserToDelete { get; set; } = 0;

    protected override void OnInitialized()
    {
        user = new User();
        Console.WriteLine("User - OnInitialized");
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("User - OnInitializedAsync");

        user = new User();
        UsersList = new List<User>();
        await base.OnInitializedAsync();
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("User - OnParametersSet");
        base.OnParametersSet();
    }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("User - OnParametersSetAsync");
        await base.OnParametersSetAsync();
    }

    protected override bool ShouldRender()
    {
        base.ShouldRender();
        Console.WriteLine("User - ShouldRender");

        return true;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("User - OnAfterRender - firstRender = " + firstRender);
        base.OnAfterRender(firstRender);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUsers();
            StateHasChanged();
        }
    }

    private async Task LoadUsers()
    {
        UsersList = await reportSerivce.GetAllAsync("users/GetUsers/");

        if (UsersList == null)
        {
            RefreshRequest refreshRequest = new RefreshRequest();
            refreshRequest.AccessToken = await localStorageService.GetItemAsync<string>("accessToken");
            refreshRequest.RefreshToken = await localStorageService.GetItemAsync<string>("refreshToken");

            var userHolder = await userSerivce.RefreshTokenAsync(refreshRequest);
            await localStorageService.SetItemAsync("accessToken", userHolder.AccessToken);
            UsersList = await reportSerivce.GetAllAsync("users/GetUsers/");
        }
        StateHasChanged();
    }

    private void EditUser(User argUser)
    {
        user = argUser;
    }

    private async Task Confirmation(bool value, int id)
    {
        ShowDeleteQuestion = false;
        if (!value)
            UserToDelete = 0;
        else
            await DeleteUser(UserToDelete);
    }

    private async Task DeleteAsk(int userId)
    {
        var selectedUser = await reportSerivce.GetByIdAsync("users/GetUser/", userId);
        if (selectedUser != null)
        {
            Message = $"Usunąć  {selectedUser.UserEmailAddress} ?";
            ShowDeleteQuestion = true;
            UserToDelete = userId;
        }
    }
    private async Task DeleteUser(int userId)
    {
        var selectedUser = await reportSerivce.GetByIdAsync("users/GetUser/", userId);
        if (selectedUser != null)
        {
            await reportSerivce.DeleteAsync("users/DeleteUser/", userId);
            await LoadUsers();
            Result = true;
            IsVisible = true;
            RecordInformation = $"Usunięto konto {selectedUser.UserName} {selectedUser.UserLastName} - {selectedUser.UserEmailAddress}";
        }
        UserToDelete = 0;
    }
    public void Dispose()
    {
        Console.WriteLine("Users - Dispose");
    }

    private async Task SaveUser()
    {
        //Mybie sometime some one will to add another user (controller side is ready this part need to uncomment)
        //if (user.IdUser == 0)
        //    await reportSerivce.SaveAsync("users/CreateUser/", user);
        //else
        if (!string.IsNullOrEmpty(user.UserEmailAddress))
        {
            await reportSerivce.UpdateAsync("users/UpdateUser/", user.IdUser, user);
            await LoadUsers();
            Result = true;
            IsVisible = true;
            var firstName = user.UserName;
            var lastName = user.UserLastName;

            RecordInformation = user.IsActive ? $"Aktywowano konto użytkownika {firstName} {lastName}  " : $"Wyłączono konto użytkownika {firstName} {lastName}";
        }

        user = new User();

    }


}
